<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="catalog_script_client">
    <catalog_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_catalog>true</applies_catalog>
        <applies_extended>false</applies_extended>
        <applies_req_item>true</applies_req_item>
        <applies_sc_task>true</applies_sc_task>
        <applies_target_record>false</applies_target_record>
        <applies_to>item</applies_to>
        <cat_item display_value="Create User">b5e1595bdb12b600360eda11cf9619cf</cat_item>
        <cat_variable/>
        <condition/>
        <description/>
        <field/>
        <global>true</global>
        <isolate_script>false</isolate_script>
        <messages/>
        <name>ADManagerSUCOnSubmit</name>
        <order/>
        <published_ref/>
        <script><![CDATA[function onSubmit() {
	g_form.clearMessages();
	scrollToTop();
	if(validateCreateUserVariables() == false) {
		g_form.submitted = false;
		return false;
	}

	var gURL = new GlideURL();
	gURL.setFromCurrent();
	var parent = gURL.getParam('parent');
	var sys_id = gURL.getParam('sys_id');
	var admpLocation = getAdmpLocation(parent, sys_id); //get location, returns "module", "menu" or "catalog"
	if(admpLocation == "module" || admpLocation == "menu") {
		createUser();
	} else if(admpLocation == "catalog") {
		var requestDetails = constructRequestDetails();
		freezeWindow(true, 'Connecting ADManager Plus...');
		var ga = new GlideAjax('ADManagerIncidentHandler');
		ga.addParam("sysparm_name", "createIncident");
		ga.addParam("requestDetails", requestDetails);
		ga.addParam("description", "Create a user in AD with the following details.");
		ga.addParam("comments", constructComments(requestDetails));
		ga.addParam("secureData", constructSecureData());
		ga.getXMLAnswer(createIncidentCallback);
	}

	function createIncidentCallback(response) {
		freezeWindow(false);
		g_form.addInfoMessage('Your request has been successfully submitted to the IT team.');
		populateFormData({});
	}

	function createUser() {
		freezeWindow(true, 'Connecting ADManager Plus...');
		var ga = new GlideAjax('ADManagerAPIUtil');
		ga.addParam("sysparm_name", "createSingleUser");
		ga.addParam("domainName", g_form.getValue('Select_Domain'));
		ga.addParam("userDetails", getUserData());
		ga.addParam("buildNumber", getBuildNumber());
		ga.addParam("encryptedAuthToken", getEncryptedAuthToken());
		ga.getXMLAnswer(createUserCallback);
		function createUserCallback(response) {
			freezeWindow(false);
			response = JSON.parse(response);
			if(response.status == 'false') {
				g_form.addErrorMessage(response.responseBody);
			} else if(response.status == 'true') {
				var msg = '';
				var result = JSON.parse(response.responseBody);
				var statusMessage = (result[0].statusMessage).replace(/&amp;/g, "&");
				if(result[0].status == "SEVERE") {
					g_form.addErrorMessage(statusMessage);
					msg += statusMessage;
				} else if(result[0].status == "SUCCESS" || result[0].status == "WARNING") {
					g_form.addInfoMessage(statusMessage);
					msg += statusMessage;
					if(result[0]["SAM Account Name"]) {
						g_form.addInfoMessage("LOGON NAME : " + result[0]["SAM Account Name"]);
						msg += "\nLogon Name : " + result[0]["SAM Account Name"];	
					}
					populateFormData({});
				} else {
					g_form.addInfoMessage(statusMessage);
					msg += statusMessage;
					populateFormData({});
				}

				var sys_id = gURL.getParam('sys_id');
				if(sys_id != null && sys_id != '' && msg != '') {
					updateComments(sys_id, msg);
				}
			}
		}
	}

	g_form.submitted = false;
	return false;
}

function isJsonParsable(str) {
	try {
		return JSON.parse(str);
	} catch (e) {
		return str;
	}
}

function getUserData() {
	var templateName = g_form.getValue('Select_Template');
	var firstName = g_form.getValue('First_Name').trim();
	var lastName = g_form.getValue('Last_Name').trim();
	var password = g_form.getValue('Password');
	var mobileNumber = g_form.getValue('Mobile_Number').trim();
	var telephoneNumber = g_form.getValue('Telephone_Number').trim();
	var jobTitle = g_form.getValue('Job_Title').trim();
	var managerName = getManagerName();
	var managerDN =  getManagerDN();

	var userList = [];
	var userDetails = {};

	if(templateName != '') userDetails.templateName = templateName;
	if(firstName != '') userDetails.givenName = firstName;
	if(lastName != '') userDetails.sn = lastName;
	if(password != '') userDetails.password = password;
	if(mobileNumber != '') userDetails.mobile = mobileNumber;
	if(telephoneNumber != '') userDetails.telephoneNumber = telephoneNumber;
	if(jobTitle != '') userDetails.title = jobTitle;
	if(managerDN != '') userDetails.manager = managerDN;

	userList.push(userDetails);
	return JSON.stringify(userList);
}

function constructRequestDetails() {
	var domainName = g_form.getValue('Select_Domain');
	var templateName = g_form.getValue('Select_Template');
	var firstName = g_form.getValue('First_Name').trim();
	var lastName = g_form.getValue('Last_Name').trim();
	// 	var password = g_form.getValue('Password');
	var mobileNumber = g_form.getValue('Mobile_Number').trim();
	var telephoneNumber = g_form.getValue('Telephone_Number').trim();
	var jobTitle = g_form.getValue('Job_Title').trim();
	var managerName = getManagerName();
	var managerDN =  getManagerDN();

	var requestDetails = {};
	requestDetails.domainName = domainName;
	requestDetails.templateName = templateName;
	requestDetails.firstName = firstName;
	requestDetails.lastName = lastName;
	//requestDetails.password = password;
	requestDetails.mobileNumber = mobileNumber;
	requestDetails.telephoneNumber = telephoneNumber;
	requestDetails.jobTitle = jobTitle;
	requestDetails.managerName = managerName;
	requestDetails.managerDN = managerDN;
	requestDetails = JSON.stringify(requestDetails);
	return requestDetails;
}

function constructSecureData() {
	var secureData = {};
	secureData.password =  g_form.getValue('Password');
	secureData = JSON.stringify(secureData);
	return secureData;
}

function constructComments(requestDetails) {
	requestDetails = requestDetails.evalJSON();
	var comments = '[code]<ul class="sn-widget-list sn-widget-list-table">';
	for(var key in requestDetails) {
		var value = requestDetails[key];
		if(value != '') {
			if(key == 'domainName') comments += '<li class="ng-scope"><span class="sn-widget-list-table-cell">Selected Domain: </span><span class="sn-widget-list-table-cell"><span class="ng-scope">' + value + '</span></span></li>';
			else if(key == 'templateName') comments += '<li class="ng-scope"><span class="sn-widget-list-table-cell">Selected Template: </span><span class="sn-widget-list-table-cell"><span class="ng-scope">' + g_form.getOption('Select_Template', value).text + '</span></span></li>';
			else if(key == 'firstName') comments += '<li class="ng-scope"><span class="sn-widget-list-table-cell">First Name: </span><span class="sn-widget-list-table-cell"><span class="ng-scope">' + value + '</span></span></li>';
			else if(key == 'lastName') comments += '<li class="ng-scope"><span class="sn-widget-list-table-cell">Last Name: </span><span class="sn-widget-list-table-cell"><span class="ng-scope">' + value + '</span></span></li>';
			else if(key == 'password') comments += '<li class="ng-scope"><span class="sn-widget-list-table-cell">Password: </span><span class="sn-widget-list-table-cell"><span class="ng-scope">******</span></span></li>';
			else if(key == 'mobileNumber') comments += '<li class="ng-scope"><span class="sn-widget-list-table-cell">Mobile Number: </span><span class="sn-widget-list-table-cell"><span class="ng-scope">' + value + '</span></span></li>';
			else if(key == 'telephoneNumber') comments += '<li class="ng-scope"><span class="sn-widget-list-table-cell">Telephone Number: </span><span class="sn-widget-list-table-cell"><span class="ng-scope">' + value + '</span></span></li>';
			else if(key == 'jobTitle') comments +='<li class="ng-scope"><span class="sn-widget-list-table-cell">Job Title: </span><span class="sn-widget-list-table-cell"><span class="ng-scope">' + value + '</span></span></li>';
			else if(key == 'managerName') comments += '<li class="ng-scope"><span class="sn-widget-list-table-cell">Manager: </span><span class="sn-widget-list-table-cell"><span class="ng-scope">' + value + '</span></span></li>';
		}
	}
	return comments;
}

function updateComments(sys_id, commment) {
	var incidentAjax = new GlideAjax("ADManagerIncidentHandler");
	incidentAjax.addParam("sysparm_name", "addComments");
	incidentAjax.addParam("comments", commment);
	incidentAjax.addParam("sys_id", sys_id);
	incidentAjax.getXMLAnswer(serverRespose);
	function serverRespose(response){}
}

function validateCreateUserVariables() {
	var domainName = g_form.getValue('Select_Domain');
	var templateName = g_form.getValue('Select_Template');
	var firstName = g_form.getValue('First_Name').trim();
	var lastName = g_form.getValue('Last_Name').trim();
	var password = g_form.getValue('Password');
	var mobileNumber = g_form.getValue('Mobile_Number').trim();
	var telephoneNumber = g_form.getValue('Telephone_Number').trim();
	var jobTitle = g_form.getValue('Job_Title').trim();

	if(domainName == null || domainName == "") {
		g_form.addErrorMessage("<b>Domain Name</b> cannot be empty!");
		return false;
	} else if(templateName == null || templateName == "") {
		g_form.addErrorMessage("<b>Template Name</b> cannot be empty!");
		return false;
	} else if(firstName == "" && lastName == "") {
		g_form.addErrorMessage("<b>Username</b> cannot be empty!");
		return false;
	} else if((firstName.length + lastName.length) > 200) {
		g_form.addErrorMessage("<b>Username</b> exceeds the maximum length!");
		return false;
	} else if(password != "" && password.length > 32) {
		g_form.addErrorMessage("<b>Password</b> exceeds the maximum length!");
		return false;
	} else if(mobileNumber != "" && mobileNumber.length > 64) {
		g_form.addErrorMessage("<b>Mobile Number</b> exceeds the maximum length!");
		return false;
	} else if(telephoneNumber != "" && telephoneNumber.length > 64) {
		g_form.addErrorMessage("<b>Telephone Number</b> exceeds the maximum length!");
		return false;
	} else if(jobTitle != "" && jobTitle.length > 128) {
		g_form.addErrorMessage("<b>Title</b> exceeds the maximum length!");
		return false;
	} else {
		return true;
	}
}

function populateFormData(formData) {
	if(formData.domainName) g_form.setValue('Select_Domain', formData.domainName);
	if(formData.templateName) g_form.setValue('Select_Template', formData.templateName);
	g_form.setValue('First_Name', formData.firstName? formData.firstName: '');
	g_form.setValue('Last_Name', formData.lastName? formData.lastName: '');
	if(formData.secureData) {
		var secureData = formData.secureData;
		secureData  = secureData.evalJSON();
		if(secureData.password) g_form.setValue('Password', secureData.password);
	} else {
		g_form.setValue('Password', '');
	}
	g_form.setValue('Mobile_Number', formData.mobileNumber? formData.mobileNumber: '');
	g_form.setValue('Telephone_Number', formData.telephoneNumber? formData.telephoneNumber: '');
	g_form.setValue('Job_Title', formData.jobTitle? formData.jobTitle: '');
	setManagerDetails(formData.managerName, formData.managerDN);
}]]></script>
        <sys_class_name>catalog_script_client</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-04-28 11:24:33</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>868b5997db52b600360eda11cf961909</sys_id>
        <sys_mod_count>44</sys_mod_count>
        <sys_name>ADManagerSUCOnSubmit</sys_name>
        <sys_overrides/>
        <sys_package display_value="ADManager Plus" source="x_manen_admanager">f61bfc1fdb9e7600360eda11cf961902</sys_package>
        <sys_policy/>
        <sys_scope display_value="ADManager Plus">f61bfc1fdb9e7600360eda11cf961902</sys_scope>
        <sys_update_name>catalog_script_client_868b5997db52b600360eda11cf961909</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-01-03 12:42:43</sys_updated_on>
        <table/>
        <type>onSubmit</type>
        <ui_type>0</ui_type>
        <va_supported>false</va_supported>
        <variable_set/>
        <view/>
    </catalog_script_client>
</record_update>
