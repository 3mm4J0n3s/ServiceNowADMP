<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_manen_admanager.ADManagerUserListHandler</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description>ADManager User List Handler</description>
        <name>ADManagerUserListHandler</name>
        <script><![CDATA[var ADManagerUserListHandler = Class.create();
ADManagerUserListHandler.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	getADUsersList: function() {
		var resultJSON = {};
		var domainName = this.getParameter('domainName');
		var searchText = this.getParameter('searchText');
		var startIndex = this.getParameter('startIndex');
		var range = this.getParameter('range');
		var is_requester = this.getParameter('is_requester');
		var buildNumber = this.getParameter('buildNumber');
		var encryptedAuthToken = this.getParameter('encryptedAuthToken');
		var responseJSON = this.doPost(domainName, searchText, startIndex, range, is_requester, buildNumber, encryptedAuthToken);
		responseJSON = new global.JSON().decode(responseJSON);
		
		if(responseJSON.status == 'true') {
			var userListJSON =  new global.JSON().decode(responseJSON.responseBody);
			var count = userListJSON.count;
			var userList = userListJSON.UsersList;
			
			resultJSON.UsersList = userList;
			resultJSON.count = count;
			resultJSON.startIndex = startIndex;
			var endIndex = parseInt(startIndex) + parseInt(range) - 1;
			resultJSON.endIndex = (endIndex<=count)?endIndex:count;
			resultJSON.status = 'true';
		} 
		else {
			gs.addErrorMessage(responseJSON.responseBody);
		}
		return new global.JSON().encode(resultJSON);
	},
	/* Fetch ADUsersList from ADManager Plus
	 * Params : domainName, searchText, startIndex, range;
	 */
	doPost: function(domainName, searchText, startIndex, range, is_requester, buildNumber, encryptedAuthToken) {
		var responseJSON = {};
		var requestBody, responseBody, responseCode, sm;
			
		var admpServerUrl = new ADManagerConfigurationHandler().getAdmpServerUrl();
		var authToken =  new ADManagerAssociateUserHandler().getAuthToken(gs.getUserID());
		
		// allow servicenow users to perform read operations with admin authtoken, if requester role
		if(is_requester == 'true') {
			authToken = new ADManagerConfigurationHandler().getAdminAuthToken();
		}
		if(encryptedAuthToken) {
			authToken = encryptedAuthToken;
		}
		
		try {
			// Might throw exception if message doesn't exist or not visible due to scope.
			sm = new sn_ws.RESTMessageV2("ADManagerADUserList", "post");  
			sm.setStringParameter('url', admpServerUrl);
			sm.setStringParameter('authToken', authToken);  
			sm.setStringParameter('domainName', domainName);
			sm.setStringParameterNoEscape('searchText', searchText);
			sm.setStringParameter('fromIndex', startIndex);
			sm.setStringParameter('range', range);
			if (buildNumber && buildNumber >= 7163) {
                sm.setQueryParameter("isAuthEncrypted", "true");
            }
			sm.setRequestHeader("Referer", gs.getProperty('glide.servlet.uri'));
			sm.setHttpTimeout(30000); 
			sm.setEccParameter('skip_sensor', 'true');
			response = sm.execute();
			
			responseBody = response.haveError() ? response.getErrorMessage() : response.getBody();
			responseCode = response.getStatusCode();
		} catch(ex) {
			responseBody = ex.getMessage();
			responseCode = '500';
		} finally {
			requestBody = sm ? sm.getRequestBody():null;
		}
		responseJSON = new ADManagerErrorHandler().handleError(responseCode, responseBody);
		if(responseCode == "0" || responseCode == "500") {
			responseJSON.responseBody = 'Cannot connect to ADManager Plus. Possible reasons could be stopping ADManager Plus service or MID Server being down.';
		}
		return new global.JSON().encode(responseJSON);
	},
    type: 'ADManagerUserListHandler'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-04-28 09:53:07</sys_created_on>
        <sys_id>71a68d1fdbde7600360eda11cf961963</sys_id>
        <sys_mod_count>27</sys_mod_count>
        <sys_name>ADManagerUserListHandler</sys_name>
        <sys_package display_value="ADManager Plus" source="x_manen_admanager">f61bfc1fdb9e7600360eda11cf961902</sys_package>
        <sys_policy>protected</sys_policy>
        <sys_scope display_value="ADManager Plus">f61bfc1fdb9e7600360eda11cf961902</sys_scope>
        <sys_update_name>sys_script_include_71a68d1fdbde7600360eda11cf961963</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-03-22 07:31:00</sys_updated_on>
    </sys_script_include>
</record_update>
