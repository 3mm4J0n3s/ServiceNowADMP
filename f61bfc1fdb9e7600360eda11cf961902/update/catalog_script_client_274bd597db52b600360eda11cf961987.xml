<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="catalog_script_client">
    <catalog_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_catalog>true</applies_catalog>
        <applies_extended>false</applies_extended>
        <applies_req_item>false</applies_req_item>
        <applies_sc_task>false</applies_sc_task>
        <applies_target_record>false</applies_target_record>
        <applies_to>item</applies_to>
        <cat_item display_value="Create User">b5e1595bdb12b600360eda11cf9619cf</cat_item>
        <cat_variable/>
        <condition/>
        <description/>
        <field/>
        <global>true</global>
        <isolate_script>false</isolate_script>
        <messages/>
        <name>ADManagerSUCOnLoad</name>
        <order/>
        <published_ref/>
        <script><![CDATA[var AUTH_ENCRYPTED_BUILD = 7163;
var CREATE_USER_FORM_CUSTOMIZATION_BUILD = 7180;
var IS_FORM_CUSTOMIZED = false;
var CREATE_USER_ACTION_ID = "1002";
function onLoad() {
	hideRecordProducerDefaultBtns('create_user'); //hide record producer default buttons
	var fieldArray = [{"name":"Select_Domain","type":"select"},{"name":"Select_Template","type":"select"},{"name":"First_Name","type":"input"},{"name":"Last_Name","type":"input"},{"name":"Password","type":"input"},{"name":"Mobile_Number","type":"input"},{"name":"Telephone_Number","type":"input"},{"name":"Job_Title","type":"input"}];
	setRecordProducerVar(fieldArray, false, true); //hide record producer variables
	showManagerVariable(false); //manager field is a macro, special handling is done in macro "ADManagerManagerField"

	var gURL = new GlideURL();
	gURL.setFromCurrent();
	var parent = gURL.getParam('parent');
	var sys_id = gURL.getParam('sys_id');
	var admpLocation = getAdmpLocation(parent, sys_id); //get location, returns "module", "menu" or "catalog"
	setPageTitle(admpLocation);

	freezeWindow(true, 'Loading, please wait...');
	var ga = new GlideAjax("ADManagerCommonUtil");
	ga.addParam("sysparm_name", "getProductVersion");
	if(admpLocation == "catalog") ga.addParam("is_requester", "true");
	ga.getXMLAnswer(getProductVersionCallback);
	function getProductVersionCallback(response) {
		freezeWindow(false);
		// 	setRecordProducerVar(fieldArray, true, true); //show record producer variables
		// 	showManagerVariable(true); //show manager field
		response = JSON.parse(response);
		if (response.status == "false") {
			g_form.addErrorMessage(response.responseBody);
			setRecordProducerVar(fieldArray, true, false); //disable record producer variables
			showManagerVariable(true); //show manager macro
			disableManagerSelection(); //disable manager macro
			return;
		}
		if (response.status == "true") {
			var buildNumber = response.buildNumber;
			setBuildNumber(buildNumber);
			if(buildNumber >= CREATE_USER_FORM_CUSTOMIZATION_BUILD) IS_FORM_CUSTOMIZED = true;
			if (buildNumber >= AUTH_ENCRYPTED_BUILD) {
				var getPublicKeyResponse = JSON.parse(response.responseBody);
				if (getPublicKeyResponse.status == "0") {
					g_form.addErrorMessage(getPublicKeyResponse.statusMessage);
					setRecordProducerVar(fieldArray, true, false); //disable record producer variables
					showManagerVariable(true); //show manager macro
					disableManagerSelection(); //disable manager macro
					return;
				} 
				if (getPublicKeyResponse.status == "1") {
					var publicKey = getPublicKeyResponse.publicKey;
					var authToken = response.authToken;
					var key = response.key;
					if(!checkIfValidUUID(authToken, true)) {
						authToken = decryptAuthtoken(authToken, key);
					}
					var encryptedAuthToken = encryptAuthtokenWithPublicKey(authToken, publicKey);
					setEncryptedAuthToken(encryptedAuthToken);

					freezeWindow(true, 'Loading, please wait...');
					ga = new GlideAjax("ADManagerCommonUtil");
					ga.addParam("sysparm_name", "getAuthInfo");
					ga.addParam("action_id", CREATE_USER_ACTION_ID);
					ga.addParam("buildNumber", buildNumber);
					ga.addParam("encryptedAuthToken", encryptedAuthToken);
					if(admpLocation == "menu") ga.addParam("sys_id", sys_id);
					if(admpLocation == "catalog") ga.addParam("is_requester", "true");
					ga.getXMLAnswer(getAuthInfoCallback);
				}
			} else if (buildNumber < AUTH_ENCRYPTED_BUILD) {
				freezeWindow(true, 'Loading, please wait...');
				ga = new GlideAjax("ADManagerCommonUtil");
				ga.addParam("sysparm_name", "getAuthInfo");
				ga.addParam("action_id", CREATE_USER_ACTION_ID);
				if(admpLocation == "menu") ga.addParam("sys_id", sys_id);
				if(admpLocation == "catalog") ga.addParam("is_requester", "true");
				ga.getXMLAnswer(getAuthInfoCallback);
			}
		}
	}

	function getAuthInfoCallback(response) {
		if(IS_FORM_CUSTOMIZED) {
			fcGetAuthInfoCallback(response);
			return;
		}
		freezeWindow(false);
		setRecordProducerVar(fieldArray, true, true); //show record producer variables
		showManagerVariable(true); //show manager field
		response = JSON.parse(response);
		if(response.status == "false") {
			g_form.addErrorMessage(response.responseBody);
			setRecordProducerVar(fieldArray, true, false); //disable record producer variables
			showManagerVariable(true); //show manager macro
			disableManagerSelection(); //disable manager macro
		} else {
			var domainList = response.domainNameList;
			if(admpLocation == "module" || admpLocation == "menu") domainList = response.authorizedDomainList;
			var defaultDomain = '';
			for(var i = 0; i < domainList.length; i++) {
				g_form.addOption('Select_Domain', domainList[i].DOMAIN_NAME, domainList[i].DOMAIN_NAME);
				if(defaultDomain == '') defaultDomain = (domainList[i].IS_DEFAULT_DOMAIN == 'true')? domainList[i].DOMAIN_NAME: '';
			}
			if(defaultDomain != '') g_form.setValue('Select_Domain', defaultDomain);
			getTemplateList(response.requestDetails, true);
		}
	}

	function getTemplateList(requestDetails, isFirstLoad) {
		freezeWindow(true, 'Loading, please wait...');
		var ga = new GlideAjax("ADManagerCommonUtil");
		ga.addParam("sysparm_name", "getTemplateList");
		ga.addParam("domainName", getDomainName(requestDetails, isFirstLoad));
		ga.addParam("buildNumber", getBuildNumber());
		ga.addParam("encryptedAuthToken", getEncryptedAuthToken());
		if(admpLocation == "catalog") ga.addParam("is_requester", "true");
		ga.getXMLAnswer(getTemplateListCallback);	

		function getTemplateListCallback(response) {
			freezeWindow(false);
			response = JSON.parse(response);
			if(response.status == "false") {
				g_form.addErrorMessage(response.responseBody);
				setRecordProducerVar(fieldArray, true, false); //disable record producer variables
				showManagerVariable(true); //show manager macro
				disableManagerSelection(); //disable manager macro
			} else {
				var templateList = JSON.parse(response.responseBody).TemplateList;
				g_form.clearOptions('Select_Template');
				var defaultTemplate = '';
				for(var i = 0; i < templateList.length; i++) {
					g_form.addOption('Select_Template', templateList[i].TEMPLATE_NAME, templateList[i].TEMPLATE_DISPLAY_NAME);
					if(defaultTemplate == '') defaultTemplate = (templateList[i].hasOwnProperty("IS_DEFAULT") && templateList[i].IS_DEFAULT)? templateList[i].TEMPLATE_NAME: '';
				}
				if(defaultTemplate != '') g_form.setValue('Select_Template', defaultTemplate);
				if(admpLocation == "menu" && requestDetails != null) {
					populateFormData(requestDetails);
				}
				if(isFirstLoad == true) {
					onDomainChangeEventListener();
					showSubmitButton(true);
				}
			}
		}
	}

	function getDomainName(formData, isFirstLoad) {
		if(isFirstLoad && admpLocation == 'menu' && formData && formData.hasOwnProperty("domainName")) {
			return formData.domainName;
		} else {
			return g_form.getValue('Select_Domain');
		}
	}

	function onDomainChangeEventListener() {
		var previousDomainNameVal = '';
		var selectDomainEle = g_form.getControl('Select_Domain');
		if(!selectDomainEle)  g_form.getElement('Select_Domain');
		selectDomainEle.observe('focus', function() {
			previousDomainNameVal = this.value; 
		}).observe('change', function() {
			g_form.clearMessages();
			var title = 'Alert';
			var message = 'Changing the domain will also change the settings of domain-specific fields. Do you wish to continue?';
			showConfirmModal(title, message, function() { /*emptyAllFields();*/ getTemplateList();clearManager(); }, function() { g_form.setValue('Select_Domain', previousDomainNameVal); });
		});
	}
}

function populateFormData(formData) {
	if(formData.domainName) g_form.setValue('Select_Domain', formData.domainName);
	if(formData.templateName) g_form.setValue('Select_Template', formData.templateName);
	g_form.setValue('First_Name', formData.firstName? formData.firstName: '');
	g_form.setValue('Last_Name', formData.lastName? formData.lastName: '');
	if(formData.secureData) {
		var secureData = formData.secureData;
		secureData  = secureData.evalJSON();
		if(secureData.password) g_form.setValue('Password', secureData.password);
	} else {
		g_form.setValue('Password', '');
	}
	g_form.setValue('Mobile_Number', formData.mobileNumber? formData.mobileNumber: '');
	g_form.setValue('Telephone_Number', formData.telephoneNumber? formData.telephoneNumber: '');
	g_form.setValue('Job_Title', formData.jobTitle? formData.jobTitle: '');
	setManagerDetails(formData.managerName, formData.managerDN);
}]]></script>
        <sys_class_name>catalog_script_client</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-04-28 11:23:54</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>274bd597db52b600360eda11cf961987</sys_id>
        <sys_mod_count>104</sys_mod_count>
        <sys_name>ADManagerSUCOnLoad</sys_name>
        <sys_overrides/>
        <sys_package display_value="ADManager Plus" source="x_manen_admanager">f61bfc1fdb9e7600360eda11cf961902</sys_package>
        <sys_policy/>
        <sys_scope display_value="ADManager Plus">f61bfc1fdb9e7600360eda11cf961902</sys_scope>
        <sys_update_name>catalog_script_client_274bd597db52b600360eda11cf961987</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-03-22 10:12:35</sys_updated_on>
        <table/>
        <type>onLoad</type>
        <ui_type>0</ui_type>
        <va_supported>false</va_supported>
        <variable_set/>
        <view/>
    </catalog_script_client>
</record_update>
