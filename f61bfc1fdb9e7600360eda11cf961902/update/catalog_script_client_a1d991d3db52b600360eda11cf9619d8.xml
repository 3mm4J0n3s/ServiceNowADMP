<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="catalog_script_client">
    <catalog_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_catalog>true</applies_catalog>
        <applies_extended>false</applies_extended>
        <applies_req_item>true</applies_req_item>
        <applies_sc_task>true</applies_sc_task>
        <applies_target_record>false</applies_target_record>
        <applies_to>item</applies_to>
        <cat_item display_value="Reset Password">98161d9fdb12b600360eda11cf961919</cat_item>
        <cat_variable/>
        <condition/>
        <description/>
        <field/>
        <global>true</global>
        <isolate_script>false</isolate_script>
        <messages/>
        <name>ADManagerResetUserPasswordOnLoad</name>
        <order/>
        <published_ref/>
        <script><![CDATA[var AUTH_ENCRYPTED_BUILD = 7163;
function onLoad() {
    hideRecordProducerDefaultBtns('reset_password');
    showRecordProducerVariable(false, 'Select_Domain', 'select');
    showRecordProducerVariable(false, 'Password', 'input');
    showRecordProducerVariable(false, 'mustChangePassword', 'input');
    showRecordProducerVariable(false, 'Name', 'input');
    showSearchButton(false);
    showSubmitButton(false);
    showADUsersList(false);

    var gURL = new GlideURL();
    gURL.setFromCurrent();
    var parent = gURL.getParam('parent');
    var sys_id = gURL.getParam('sys_id');
	
	setInitialPageTitle(parent, sys_id);

    freezeWindow(true, 'Connecting ADManager Plus...');
    var actionHandler = new GlideAjax("ADManagerCommonUtil");
    actionHandler.addParam("sysparm_name", "getProductVersion");
    if (!(parent && (parent == 'module' || parent == 'menu') && g_user.hasRole('x_manen_admanager.admanager_admin')) && g_user.hasRole('x_manen_admanager.admanager_requester')) {
        actionHandler.addParam("is_requester", "true");
    }
    actionHandler.getXMLAnswer(getProductVersion);

    function getProductVersion(response) {
        freezeWindow(false);
        showRecordProducerVariable(true, 'Select_Domain', 'select');
        showRecordProducerVariable(true, 'Password', 'input');
        showRecordProducerVariable(true, 'mustChangePassword', 'input');
        showRecordProducerVariable(true, 'Name', 'input');
        response = JSON.parse(response);
        if (response.status == "false") {
            g_form.addErrorMessage(response.responseBody);
            enableRecordProducerVariable(false, 'Select_Domain', 'select');
            enableRecordProducerVariable(false, 'Password', 'input');
            enableRecordProducerVariable(false, 'mustChangePassword', 'input');
            enableRecordProducerVariable(false, 'Name', 'input');
            return;
        }
        if (response.status == "true") {
            var buildNumber = response.buildNumber;
            setBuildNumber(buildNumber);
            if (buildNumber >= AUTH_ENCRYPTED_BUILD) {
                var getPublicKeyResponse = JSON.parse(response.responseBody);
                if (getPublicKeyResponse.status == "0") {
                    g_form.addErrorMessage(getPublicKeyResponse.statusMessage);
                    enableRecordProducerVariable(false, 'Select_Domain', 'select');
                    enableRecordProducerVariable(false, 'Password', 'input');
                    enableRecordProducerVariable(false, 'mustChangePassword', 'input');
                    enableRecordProducerVariable(false, 'Name', 'input');
                    return;
                }
                if (getPublicKeyResponse.status == "1") {
                    var publicKey = getPublicKeyResponse.publicKey;
                    var authToken = response.authToken;
					var key = response.key;
					if(!checkIfValidUUID(authToken, true)) {
						authToken = decryptAuthtoken(authToken, key);
					}
                    var encryptedAuthToken = encryptAuthtokenWithPublicKey(authToken, publicKey);
                    setEncryptedAuthToken(encryptedAuthToken);
                    if (parent && parent == 'module' && g_user.hasRole('x_manen_admanager.admanager_admin')) {
                        setPageTitle('module');
                        freezeWindow(true, 'Connecting ADManager Plus...');
                        actionHandler = new GlideAjax("ADManagerCommonUtil");
                        actionHandler.addParam("sysparm_name", "getAuthInfo");
                        actionHandler.addParam("action_id", "1012");
                        actionHandler.addParam("buildNumber", buildNumber);
                        actionHandler.addParam("encryptedAuthToken", encryptedAuthToken);
                        actionHandler.getXMLAnswer(getAuthInfo);
                    } else if (parent && parent == 'menu' && sys_id != null && sys_id != '' && g_user.hasRole('x_manen_admanager.admanager_admin')) {
                        setPageTitle('menu');
                        freezeWindow(true, 'Connecting ADManager Plus...');
                        actionHandler = new GlideAjax("ADManagerCommonUtil");
                        actionHandler.addParam("sysparm_name", "getAuthInfo");
                        actionHandler.addParam("action_id", "1012");
                        actionHandler.addParam("buildNumber", buildNumber);
                        actionHandler.addParam("encryptedAuthToken", encryptedAuthToken);
                        actionHandler.addParam("sys_id", sys_id);
                        actionHandler.getXMLAnswer(getAuthInfo);
                    } else if (g_user.hasRole('x_manen_admanager.admanager_requester')) {
                        setPageTitle('');
                        freezeWindow(true, 'Connecting ADManager Plus...');
                        actionHandler = new GlideAjax("ADManagerCommonUtil");
                        actionHandler.addParam("sysparm_name", "getAuthInfo");
                        actionHandler.addParam("action_id", "1012");
                        actionHandler.addParam("buildNumber", buildNumber);
                        actionHandler.addParam("encryptedAuthToken", encryptedAuthToken);
                        actionHandler.addParam("is_requester", "true");
                        actionHandler.getXMLAnswer(getAuthInfo);
                    }
                }
            } else if (buildNumber < AUTH_ENCRYPTED_BUILD) {
                if (parent && parent == 'module' && g_user.hasRole('x_manen_admanager.admanager_admin')) {
                    setPageTitle('module');
                    freezeWindow(true, 'Connecting ADManager Plus...');
                    actionHandler = new GlideAjax("ADManagerCommonUtil");
                    actionHandler.addParam("sysparm_name", "getAuthInfo");
                    actionHandler.addParam("action_id", "1012");
                    actionHandler.getXMLAnswer(getAuthInfo);
                } else if (parent && parent == 'menu' && sys_id != null && sys_id != '' && g_user.hasRole('x_manen_admanager.admanager_admin')) {
                    setPageTitle('menu');
                    freezeWindow(true, 'Connecting ADManager Plus...');
                    actionHandler = new GlideAjax("ADManagerCommonUtil");
                    actionHandler.addParam("sysparm_name", "getAuthInfo");
                    actionHandler.addParam("action_id", "1012");
                    actionHandler.addParam("sys_id", sys_id);
                    actionHandler.getXMLAnswer(getAuthInfo);
                } else if (g_user.hasRole('x_manen_admanager.admanager_requester')) {
                    setPageTitle('');
                    freezeWindow(true, 'Connecting ADManager Plus...');
                    actionHandler = new GlideAjax("ADManagerCommonUtil");
                    actionHandler.addParam("sysparm_name", "getAuthInfo");
                    actionHandler.addParam("action_id", "1012");
                    actionHandler.addParam("is_requester", "true");
                    actionHandler.getXMLAnswer(getAuthInfo);
                }
            }
        }
    }

    function getAuthInfo(response) {
        freezeWindow(false);
        showRecordProducerVariable(true, 'Select_Domain', 'select');
        showRecordProducerVariable(true, 'Password', 'input');
        showRecordProducerVariable(true, 'mustChangePassword', 'input');
        showRecordProducerVariable(true, 'Name', 'input');
        response = JSON.parse(response);
        if (response.status == "false") {
            g_form.addErrorMessage(response.responseBody);
            enableRecordProducerVariable(false, 'Select_Domain', 'select');
            enableRecordProducerVariable(false, 'Password', 'input');
            enableRecordProducerVariable(false, 'mustChangePassword', 'input');
            enableRecordProducerVariable(false, 'Name', 'input');
        } else {
            var domainList = response.domainNameList;
            if (parent && (parent == 'module' || parent == 'menu') && g_user.hasRole('x_manen_admanager.admanager_admin')) {
                domainList = response.authorizedDomainList;
            }

            var defaultDomain = '';
            for (var i = 0; i < domainList.length; i++) {
                g_form.addOption('Select_Domain', domainList[i].DOMAIN_NAME, domainList[i].DOMAIN_NAME);
                if (defaultDomain == '')
                    defaultDomain = (domainList[i].IS_DEFAULT_DOMAIN == 'true') ? domainList[i].DOMAIN_NAME : '';
            }
            if (defaultDomain != '') g_form.setValue('Select_Domain', defaultDomain);

            if (parent == 'menu' && g_user.hasRole('x_manen_admanager.admanager_admin') && sys_id != null && sys_id != '') {
                var formData = response.requestDetails;
                if (formData.usersList) {
                    populateFormData(formData);
                }
            }

            var previousDomainNameVal = '';
			var selectDomainEle = g_form.getControl('Select_Domain');
			if(!selectDomainEle)  g_form.getElement('Select_Domain');
            selectDomainEle.observe('focus', function() {
                previousDomainNameVal = this.value;
            }).observe('change',
                function() {
                    if (isFormFilled()) {
                        g_form.clearMessages();
                        var title = 'Alert';
                        var message = 'Changing the domain will also change the settings of domain-specific fields. Do you wish to continue?';
                        showConfirmModal(title, message, function() {
                            emptyAllFields();
                        }, function() {
                            g_form.setValue('Select_Domain', previousDomainNameVal);
                        });
                    }
                }
            );

			var nameEle = g_form.getControl('Name');
			if(!nameEle)  g_form.getElement('Name');
            nameEle.observe('keypress', function(e) {
                if (e.keyCode == 13) {
                    e.preventDefault();
                    searchUsers();
                }
            });

            showSearchButton(true);
        }
    }
}

function populateFormData(formData) {
    if (formData.domainName) g_form.setValue('Select_Domain', formData.domainName);
    if (formData.secureData) {
        var secureData = formData.secureData;
        secureData = secureData.evalJSON();
        if (secureData.password) g_form.setValue('Password', secureData.password);
    } else {
        g_form.setValue('Password', '');
    }

    if (formData.mustChangePassword) g_form.setValue('mustChangePassword', formData.mustChangePassword);
    if (formData.searchText) g_form.setValue('Name', formData.searchText);
    formData.startIndex = 1;
    formData.endIndex = formData.usersList.length;
    formData.count = formData.usersList.length;
    formData.UsersList = formData.usersList;
    setSelectedUsersList(formData.usersList);
    loadUserList(JSON.stringify(formData), true);
}]]></script>
        <sys_class_name>catalog_script_client</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-04-28 11:17:01</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>a1d991d3db52b600360eda11cf9619d8</sys_id>
        <sys_mod_count>36</sys_mod_count>
        <sys_name>ADManagerResetUserPasswordOnLoad</sys_name>
        <sys_overrides/>
        <sys_package display_value="ADManager Plus" source="x_manen_admanager">f61bfc1fdb9e7600360eda11cf961902</sys_package>
        <sys_policy/>
        <sys_scope display_value="ADManager Plus">f61bfc1fdb9e7600360eda11cf961902</sys_scope>
        <sys_update_name>catalog_script_client_a1d991d3db52b600360eda11cf9619d8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-03-21 12:07:29</sys_updated_on>
        <table/>
        <type>onLoad</type>
        <ui_type>0</ui_type>
        <va_supported>false</va_supported>
        <variable_set/>
        <view/>
    </catalog_script_client>
</record_update>
