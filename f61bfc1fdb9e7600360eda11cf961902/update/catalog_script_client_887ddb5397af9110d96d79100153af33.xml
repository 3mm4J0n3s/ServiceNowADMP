<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="catalog_script_client">
    <catalog_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_catalog>true</applies_catalog>
        <applies_extended>false</applies_extended>
        <applies_req_item>false</applies_req_item>
        <applies_sc_task>false</applies_sc_task>
        <applies_target_record>false</applies_target_record>
        <applies_to>item</applies_to>
        <cat_item display_value="Modify Manager">d54b547297631110d96d79100153afdb</cat_item>
        <cat_variable/>
        <condition/>
        <description/>
        <field/>
        <global>true</global>
        <isolate_script>true</isolate_script>
        <messages/>
        <name>ADManagerModifyManagerOnLoad</name>
        <order/>
        <published_ref/>
        <script><![CDATA[var AUTH_ENCRYPTED_BUILD = 7163;
var MODIFY_MANAGER_ACTION_ID = "1213";
function onLoad() {
	hideRecordProducerDefaultBtns('modify_manager');
	var fieldArray = [{"name":"Select_Domain","type":"select"},{"name":"Name","type":"input"}];
	setRecordProducerVar(fieldArray, false, true); //hide record producer variables
	showManagerVariable(false); //manager field is a macro, special handling is done in macro "ADManagerManagerField"
	showSearchButton(false);
	showSubmitButton(false);
	showADUsersList(false);

	var gURL = new GlideURL();
	gURL.setFromCurrent();
	var parent = gURL.getParam('parent');
	var sys_id = gURL.getParam('sys_id');
	var admpLocation = getAdmpLocation(parent, sys_id); //get location, returns "module", "menu" or "catalog"
	setPageTitle(admpLocation);

	freezeWindow(true, 'Loading, please wait...');
	var ga = new GlideAjax("ADManagerCommonUtil");
	ga.addParam("sysparm_name", "getProductVersion");
	if(admpLocation == "catalog") ga.addParam("is_requester", "true");
	ga.getXMLAnswer(getProductVersionCallback);
	function getProductVersionCallback(response) {
		freezeWindow(false);
		response = JSON.parse(response);
		if (response.status == "false") {
			g_form.addErrorMessage(response.responseBody);
			setRecordProducerVar(fieldArray, true, false); //disable record producer variables
			showManagerVariable(true); //show manager macro
			disableManagerSelection(); //disable manager macro
		} else if (response.status == "true") {
			var buildNumber = response.buildNumber;
			setBuildNumber(buildNumber);
			if (buildNumber >= AUTH_ENCRYPTED_BUILD) {
				var getPublicKeyResponse = JSON.parse(response.responseBody);
				if (getPublicKeyResponse.status == "0") {
					g_form.addErrorMessage(getPublicKeyResponse.statusMessage);
					setRecordProducerVar(fieldArray, true, false); //disable record producer variables
					showManagerVariable(true); //show manager macro
					disableManagerSelection(); //disable manager macro
				} else if (getPublicKeyResponse.status == "1") {
					var publicKey = getPublicKeyResponse.publicKey;
					var authToken = response.authToken;
					var key = response.key;
					if(!checkIfValidUUID(authToken, true)) {
						authToken = decryptAuthtoken(authToken, key);
					}
					var encryptedAuthToken = encryptAuthtokenWithPublicKey(authToken, publicKey);
					setEncryptedAuthToken(encryptedAuthToken);

					freezeWindow(true, 'Loading, please wait...');
					ga = new GlideAjax("ADManagerCommonUtil");
					ga.addParam("sysparm_name", "getAuthInfo");
					ga.addParam("action_id", MODIFY_MANAGER_ACTION_ID);
					ga.addParam("buildNumber", buildNumber);
					ga.addParam("encryptedAuthToken", encryptedAuthToken);
					if(admpLocation == "menu") ga.addParam("sys_id", sys_id);
					if(admpLocation == "catalog") ga.addParam("is_requester", "true");
					ga.getXMLAnswer(getAuthInfoCallback);
				}
			} else if (buildNumber < AUTH_ENCRYPTED_BUILD) {
				freezeWindow(true, 'Loading, please wait...');
				ga = new GlideAjax("ADManagerCommonUtil");
				ga.addParam("sysparm_name", "getAuthInfo");
				ga.addParam("action_id", MODIFY_MANAGER_ACTION_ID);
				if(admpLocation == "menu") ga.addParam("sys_id", sys_id);
				if(admpLocation == "catalog") ga.addParam("is_requester", "true");
				ga.getXMLAnswer(getAuthInfoCallback);
			}
		}
	}

	function getAuthInfoCallback(response) {
		freezeWindow(false);
		setRecordProducerVar(fieldArray, true, true); //show record producer variables
		showManagerVariable(true); //show manager field
		response = JSON.parse(response);
		if (response.status == "false") {
			g_form.addErrorMessage(response.responseBody);
			setRecordProducerVar(fieldArray, true, false); //disable record producer variables
			showManagerVariable(true); //show manager macro
			disableManagerSelection(); //disable manager macro
		} else {
			var domainList = response.domainNameList;
			if(admpLocation == "module" || admpLocation == "menu") domainList = response.authorizedDomainList;
			var defaultDomain = '';
			for(var i = 0; i < domainList.length; i++) {
				g_form.addOption('Select_Domain', domainList[i].DOMAIN_NAME, domainList[i].DOMAIN_NAME);
				if(defaultDomain == '') defaultDomain = (domainList[i].IS_DEFAULT_DOMAIN == 'true')? domainList[i].DOMAIN_NAME: '';
			}
			if(defaultDomain != '') g_form.setValue('Select_Domain', defaultDomain);
			onDomainChangeEventListener();
			var nameEle = g_form.getControl('Name');
			if(!nameEle)  g_form.getElement('Name');
			nameEle.observe('keypress', function(e) {
				if(e.keyCode == 13) {
					e.preventDefault();
					searchUsers();
				}
			});
			showSearchButton(true);
			var requestDetails = response.requestDetails;
			if(admpLocation == "menu" && requestDetails != null) {
				populateFormData(requestDetails);
			}
		}
	}

	function onDomainChangeEventListener() {
		var previousDomainNameVal = '';
		var selectDomainEle = g_form.getControl('Select_Domain');
		if(!selectDomainEle)  g_form.getElement('Select_Domain');
		selectDomainEle.observe('focus', function() {
			previousDomainNameVal = this.value;
		}).observe('change', function() {
			if (isFormFilled()) {
				g_form.clearMessages();
				var title = 'Alert';
				var message = 'Changing the domain will also change the settings of domain-specific fields. Do you wish to continue?';
				showConfirmModal(title, message, function() {
					emptyAllFields();
				}, function() {
					g_form.setValue('Select_Domain', previousDomainNameVal);
				});
			}
		});
	}

	function populateFormData(formData) {
		if (formData.domainName) g_form.setValue('Select_Domain', formData.domainName);
		if(formData.managerName && formData.managerDN) setManagerDetails(formData.managerName, formData.managerDN);
		g_form.setValue('Name', formData.searchText ? formData.searchText : '');
		formData.startIndex = 1;
		formData.endIndex = formData.usersList.length;
		formData.count = formData.usersList.length;
		formData.UsersList = formData.usersList;
		setSelectedUsersList(formData.usersList);
		loadUserList(JSON.stringify(formData), true);
	}
}
]]></script>
        <sys_class_name>catalog_script_client</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-09 10:02:00</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>887ddb5397af9110d96d79100153af33</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>ADManagerModifyManagerOnLoad</sys_name>
        <sys_overrides/>
        <sys_package display_value="ADManager Plus" source="x_manen_admanager">f61bfc1fdb9e7600360eda11cf961902</sys_package>
        <sys_policy/>
        <sys_scope display_value="ADManager Plus">f61bfc1fdb9e7600360eda11cf961902</sys_scope>
        <sys_update_name>catalog_script_client_887ddb5397af9110d96d79100153af33</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-03-21 12:10:36</sys_updated_on>
        <table/>
        <type>onLoad</type>
        <ui_type>0</ui_type>
        <va_supported>false</va_supported>
        <variable_set/>
        <view/>
    </catalog_script_client>
</record_update>
